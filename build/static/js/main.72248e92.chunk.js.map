{"version":3,"sources":["Images/Logo.png","Config/url.js","Containers/SearchForm/SearchForm.js","Components/Button/LoadMoreButton.js","Components/Cards/RestaurantCard.js","Components/Loaders/Loading.js","Components/Bulletins/RestaurantDisplayBulletin.js","Containers/Homepage.js","Containers/NonExistentPage.js","Containers/NavBar/NavBar.js","Containers/Restaurants/FranchiseOwnedResPage.js","Components/MenuBar/BulletinMenuBar.js","Containers/Restaurants/CustomerRestaurantListPage.js","Containers/Restaurants/RestaurantsListPage.js","Components/Modals/RateModal.js","Common/ParserUtil.js","Components/Cards/CustomerResCard.js","Containers/Reservations/CustomerRes.js","Components/Cards/FResCard.js","Components/Accordions/RestaurantAccordion.js","Containers/Reservations/FOwnerRes.js","Containers/Reservations/Reservations.js","Components/Label/InputErrorLabel.js","Components/LoginForm/LoginForm.js","Containers/LoginPage/LoginPage.js","Components/RegisterForm/RegisterForm.js","Containers/RegisterPage/RegisterPage.js","Data/PaxOptions.js","Components/Modals/ConfirmBookingModal.js","Containers/SearchForm/BookRestaurant.js","Components/Cards/FoodCard.js","Components/Modals/MenuModal.js","Containers/RestaurantLandingPage/RestaurantDetailBox.js","Components/Cards/LoyalCustomerCard.js","Containers/RestaurantLandingPage/LandingPage.js","Common/ProtectedRoute.js","Components/Cards/VoucherCard.js","Containers/VoucherList/VoucherList.js","Components/Modals/DeleteModal.js","Containers/Reservations/EditCResvPage.js","Data/ParticlesOptions.js","Data/LoginState.js","Common/ProtectedCustomerRoute.js","App.js","serviceWorker.js","index.js","Images/food.jpg"],"names":["module","exports","url","fetchURL","SearchForm","createDropdown","route","fetch","then","resp","json","data","dropdownOptions","push","key","text","value","forEach","obj","setState","catch","error","console","log","state","cuisines","areas","franchisors","this","initialValues","cuisine","area","franchise","onSubmit","values","props","triggerDisplay","validationSchema","yup","shape","render","handleSubmit","setFieldValue","handleDropdownChange","e","name","Form","size","className","Group","widths","Field","Select","placeholder","options","onChange","Button","icon","color","onClick","type","Component","LoadMoreButton","loadMore","RestaurantCard","loadedData","openingHours","closingHours","price","ratings","Card","Image","src","foodImage","wrapped","ui","Content","Header","to","Meta","id","extra","Icon","Loading","height","width","RestaurantDisplayBulletin","loading","resDisplay","visibleItemsNum","totalLength","slice","map","Homepage","visible","displayResults","filters","method","headers","body","JSON","stringify","filteredResults","restaurants","length","NonExistentPage","NavBar","handleItemClick","activeItem","loginProp","isSignedIn","isFranchiseOwner","Menu","borderless","Logo","alt","Item","active","FranchiseOwnedResPage","franchiseOwnerID","userID","BulletinMenuBar","handleCategoryClick","pointing","secondary","inverted","str","index","CustomerRestaurantListPage","cat","fetchAllRestaurants","showAll","fetchCompatibleRestaurants","allRestaurants","compatibleRestaurants","userid","bind","RestaurantsListPage","RateModal","handleRate","rating","postRating","resName","location","dateTime","table","resid","clicked","Modal","trigger","onClose","fetchReservations","Rating","maxRating","clearable","onRate","negative","content","dateParser","dateTimeObj","toDateString","toTimeString","substring","CustomerResCard","isCurrent","resUrl","pax","fluid","pathname","resvData","CustomerRes","filteredData","reservations","filter","x","Date","filteredReservations","setTimeout","dateObj","Object","assign","centered","FResCard","RestaurantAccordion","activeIndex","handleClick","reservData","Accordion","Title","Grid","columns","reserv","Column","FOwnerRes","allRestReserv","titleProps","newIndex","franchiseUserID","styled","restaurant","Reservations","InputErrorLabel","touched","errorText","Label","basic","LoginForm","password","loginUser","franchiseOwner","history","result","Error","err","alert","required","errors","handleChange","handleBlur","isSubmitting","Input","onBlur","React","LoginPage","RegisterForm","confirmPassword","min","max","test","parent","RegisterPage","PaxOptions","ConfirmBookingModal","submit","submitted","noSeats","noDouble","notOpen","available","reset","dimmer","Dimmer","Loader","Description","date","toString","voucher","Actions","initialState","BookRestaurant","owned","voucherName","voucher_code","count","useVoucher","voucherCode","resetState","franchisorId","isEditing","urlToUse","oldDateTime","oldTableNumber","data-enable-time","minDate","maxDate","fp_incr","voucherUseList","FoodCard","foodData","as","attached","Segment","MenuModal","menuData","scrolling","RestaurantDetailBox","resData","opening_hours","closing_hours","specialOpHrsArr","specialOpHrs","entry","string","day","open","close","LoyalCustomerCard","loyalCustomerData","numBookings","percentBookings","LandingPage","notFound","noLoyalCustomer","match","params","onError","target","onerror","food","store_name","ProtectedRoute","component","rest","path","exact","from","VoucherCard","buyingLoad","buySuccess","buyVoucher","refresh","cost","discount","description","canBuy","circular","style","Subheader","disabled","Voucherlist","vouchers","customerPoints","pointLoadFailed","refreshPage","getUserPoints","fetchVouchers","points","DeleteModal","clickDelete","EditCResvPage","particlesOptions","polygon","nb_sides","opacity","loginState","logout","customer","ProtectedCustomerRoute","isCustomer","App","signOutUser","LoginState","ParticlesOptions","Register","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72248e92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.79c7d7dd.png\";","const url = {\n    fetchURL: 'http://localhost:3001', //for local hosting\n}\n\nexport default url;","import React, { Component } from 'react';\nimport { Button, Form } from 'semantic-ui-react'\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport url from '../../Config/url';\n\n/**\n * SearchForm placed at the front page to be used for the searching of Restaurants\n */\nclass SearchForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            cuisines: [],\n            areas: [],\n            franchisors: []\n        }\n    }\n\n    componentDidMount() {\n        this.createDropdown('cuisines');\n        this.createDropdown('areas');\n        this.createDropdown('franchisors');\n    }\n\n    createDropdown = (route) => {\n        fetch(`${url.fetchURL}/${route}`)\n            .then(resp => resp.json())\n            .then(data => {\n                const dropdownOptions = [];\n                dropdownOptions.push({ key: '0', text: 'None', value: '' });\n                data.forEach(data => {\n                    const obj = { key: data, text: data, value: data }\n                    dropdownOptions.push(obj);\n                })\n                const obj = {};\n                obj[route] = dropdownOptions;\n                this.setState(obj);\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <Formik\n                initialValues={{\n                    cuisine: '',\n                    area: '',\n                    franchise: '',\n                }}\n\n                onSubmit={(values) => {\n                    this.props.triggerDisplay(values);\n                }}\n\n\n                validationSchema={yup.object().shape({\n                    cuisine: yup.string(),\n                    area: yup.string(),\n                    franchise: yup.string(),\n                })}\n\n                render={({ values, handleSubmit, setFieldValue }) => {\n                    const handleDropdownChange = (e, { name, value }) => {\n                        setFieldValue(name, value);\n                    };\n\n                    return (\n                        <Form size='big' className='ba br4 b--light-silver pa3 appColor'>\n                            <h3 className='f2 white '>Find your Restaurant</h3>\n                            <Form.Group widths='equal'>\n\n                                <Form.Field>\n                                    <Form.Select //Dropdown\n                                        placeholder='Any Franchise'\n                                        name=\"franchise\"\n                                        options={this.state.franchisors}\n                                        value={values.franchise}\n                                        onChange={handleDropdownChange}\n                                    />\n                                </Form.Field>\n\n                                <Form.Select //Dropdown\n                                    placeholder='Any Cuisine'\n                                    name=\"cuisine\"\n                                    options={this.state.cuisines}\n                                    value={values.cuisine}\n                                    onChange={handleDropdownChange}\n                                />\n\n                                <Form.Select //Dropdown\n                                    placeholder='Any Area'\n                                    name=\"area\"\n                                    options={this.state.areas}\n                                    value={values.area}\n                                    onChange={handleDropdownChange}\n                                />\n                                <Button\n                                    icon='search'\n                                    color='yellow'\n                                    onClick={handleSubmit}\n                                    type='submit'\n                                />\n                            </Form.Group>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default SearchForm;","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nconst LoadMoreButton = ({ loadMore }) => {\n    return (\n        <div className='flex justify-center relative mb4'>\n            <Button\n                onClick={() => loadMore()}\n                size='large' className='w-40 f5 button'>\n                See More\n            </Button>\n        </div>\n    );\n}\n\nexport default LoadMoreButton;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport foodImage from '../../Images/food.jpg';\nimport './RestaurantCard.css';\n\nconst RestaurantCard = (props) => {\n    const loadedData = props.data;\n    const { name, area, cuisine, openingHours, closingHours, price, url, ratings } = loadedData;\n\n    return (\n        <Card className='ResCard'>\n            <Image src={foodImage} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header className='NameHeader'>\n                    <Link to={`/restaurants/${url}`}>\n                        {name}\n                    </Link>\n                </Card.Header>\n\n                <div>\n                    <Card.Meta>\n                        <span>Cuisine: {cuisine}</span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <span>Area: {area}</span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <span>Price: {price}</span>\n                        <span id='Right'>Ratings: {ratings}</span>\n                    </Card.Meta>\n                </div>\n            </Card.Content>\n            <Card.Content extra>\n                <Icon name='clock' />\n                Operating Hours: {openingHours} to {closingHours}\n            </Card.Content>\n        </Card>\n    )\n}\n\nexport default RestaurantCard;","import React from 'react';\nimport Loader from 'react-loader-spinner'\n\nconst Loading = () => (\n    <div className = 'flex justify-center'>\n        <Loader type=\"Audio\" color=\"#FFFFFF\" height={200} width={300} />\n    </div>\n);\n\nexport default Loading","import React from \"react\";\nimport LoadMoreButton from \"../Button/LoadMoreButton\";\nimport RestaurantCard from \"../Cards/RestaurantCard\";\nimport \"./RestaurantDisplayBulletin.css\";\nimport Loading from \"../Loaders/Loading\";\n\nconst RestaurantDisplayBulletin = ({\n  loading,\n  resDisplay,\n  visibleItemsNum,\n  totalLength,\n  loadMore,\n}) => {\n  return loading ? (\n    <Loading />\n  ) : (\n    <div>\n      <div id=\"RDB\">\n        {typeof resDisplay === \"object\"\n          ? resDisplay.slice(0, visibleItemsNum).map((data) => {\n              return <RestaurantCard data={data} key={data.name + data.area} />;\n            })\n          : \"\"}\n      </div>\n\n      {visibleItemsNum < totalLength && <LoadMoreButton loadMore={loadMore} />}\n    </div>\n  );\n};\n\nexport default RestaurantDisplayBulletin;\n","import React, { Component } from 'react';\n\nimport SearchForm from './SearchForm/SearchForm';\nimport RestaurantDisplayBulletin from '../Components/Bulletins/RestaurantDisplayBulletin';\n\nimport url from '../Config/url';\n\nimport '../Components/Cards/RestaurantCard.css';\nimport '../App.css'\n\nconst defaultVisibleItems = 6;\n\nclass Homepage extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdisplayResults: false,\n\t\t\tloading: false,\n\t\t\trestaurants: [],\n\t\t\tfilteredResults: [],\n\t\t\tvisible: defaultVisibleItems\n\t\t}\n\t}\n\n\tloadMore = () => {\n\t\tthis.setState({\n\t\t\tvisible: (this.state.visible) + 3,\n\t\t})\n\t}\n\n\tdisplayResults = (filters) => {\n\t\tthis.setState({ loading: true })\n\t\tfetch(`${url.fetchURL}/search`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: { 'Content-type': 'application/json' },\n\t\t\tbody: JSON.stringify(filters)\n\t\t})\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tdisplayResults: true,\n\t\t\t\t\tfilteredResults: data,\n\t\t\t\t\tvisible: defaultVisibleItems\n\t\t\t\t})\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pl7 pr7 pt7\">\n\t\t\t\t<SearchForm triggerDisplay={this.displayResults} />\n\t\t\t\t{this.state.displayResults &&\n\t\t\t\t\t<RestaurantDisplayBulletin\n\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\tresDisplay={this.state.filteredResults}\n\t\t\t\t\t\tvisibleItemsNum={this.state.visible}\n\t\t\t\t\t\ttotalLength={this.state.filteredResults.length}\n\t\t\t\t\t\tloadMore={this.loadMore}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Homepage;\n","import React, {Component} from 'react';\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nclass NonExistentPage extends Component{\n\trender() {\n\t\treturn (\t //acts as a card list here\n\t\t\t<div className = 'ma5 tc'>\n                <h1 className = 'baskerville fw5'>\n                    Sorry, the page you are looking for does not exist!\n                </h1>\n\t\t\t\t<Link to = '/'>\n                        <Button>Back to Homepage</Button>\n                </Link>\n\t\t\t</div>\n    \t);\n  }\n}\n\nexport default NonExistentPage;","import React, { Component } from \"react\";\nimport { Button, Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport Logo from \"../../Images/Logo.png\";\n\nclass NavBar extends Component {\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n  constructor() {\n    super();\n    this.state = {\n      activeItem: \"\",\n    };\n  }\n\n  render() {\n    const { loginProp, isSignedIn, name, isFranchiseOwner } = this.props;\n\n    return (\n      <Menu borderless id=\"Navbar\">\n        <Link to=\"/\" className=\"link no-underline flex items-center pl3\">\n          <img src={Logo} id=\"Logo\" alt=\"logo\" />\n        </Link>\n\n        <div className=\" dib flex items-left\" id=\"NormalD\">\n          <Menu id=\"HeaderWord\">\n            <Menu.Item>\n              <Button\n                className=\"HeaderBut\"\n                name=\"Restaurants\"\n                active={this.state.activeItem === \"Restaurants\"}\n                onClick={this.handleItemClick}\n              >\n                <Link to=\"/restaurants\">\n                  <div className=\"link dib dim mr0 mr1-ns\" id=\"RestaurantFS\">\n                    {isFranchiseOwner\n                      ? \"Owned Restaurants\"\n                      : \"View All Restaurants\"}\n                  </div>\n                </Link>\n              </Button>\n            </Menu.Item>\n\n            <Menu.Item>\n              <Button\n                className=\"HeaderBut\"\n                name=\"Reviews\"\n                active={this.state.activeItem === \"Reviews\"}\n                onClick={this.handleItemClick}\n              >\n                <Link to=\"/reservations\">\n                  <div className=\"link dib dim mr0 mr1-ns\" id=\"ReviewFS\">\n                    {isFranchiseOwner\n                      ? \"View Customer Reservations\"\n                      : \"My Reservations\"}\n                  </div>\n                </Link>\n              </Button>\n            </Menu.Item>\n\n            <Menu.Item>\n              <Button\n                className=\"HeaderBut\"\n                name=\"Voucherlist\"\n                active={this.state.activeItem === \"Voucherlist\"}\n                onClick={this.handleItemClick}\n              >\n                <Link to=\"/voucherlist\">\n                  <div className=\"link dib dim mr0 mr1-ns\" id=\"VoucherFS\">\n                    {isFranchiseOwner ? null : \"List of Vouchers\"}\n                  </div>\n                </Link>\n              </Button>\n            </Menu.Item>\n          </Menu>\n\n          <Menu.Menu>\n            <Menu.Item id=\"SignInOut\">\n              <div>\n                {isSignedIn ? (\n                  <i className=\"underline LogInText\">Logged in as {name}</i>\n                ) : null}\n\n                {isSignedIn === false ? ( //conditional\n                  <Link to=\"/login\">\n                    <Button className=\"SIObut\">Login</Button>\n                  </Link>\n                ) : (\n                  <Link to=\"/\">\n                    <Button className=\"SIObut\" onClick={() => loginProp()}>\n                      Sign Out\n                    </Button>\n                  </Link>\n                )}\n              </div>\n            </Menu.Item>\n          </Menu.Menu>\n        </div>\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport RestaurantDisplayBulletin from '../../Components/Bulletins/RestaurantDisplayBulletin';\nimport url from '../../Config/url'\n\n/**\n * Page for exclusive use by FranchiseOwners to view all their owned Restaurants\n */\nclass FranchiseOwnedResPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            restaurants: [],\n            loading: true,\n            visible: 8\n        }\n    }\n\n    componentDidMount() {\n        fetch(`${url.fetchURL}/ownedRestaurants`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                franchiseOwnerID: this.props.userID\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({ restaurants: data, loading: false })\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    loadMore = () => {\n        this.setState({\n            visible: (this.state.visible) + 8,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"w-75 pt5 center bb b--black-10\">\n                    <h1 className=\"tc baskerville f1 fw5\"> Owned Restaurants</h1>\n                </div>\n\n                <div className='pa4'>\n                    <RestaurantDisplayBulletin\n                        loading={this.state.loading}\n                        resDisplay={this.state.restaurants}\n                        visibleItemsNum={this.state.visible}\n                        totalLength={this.state.restaurants.length}\n                        loadMore={this.loadMore}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FranchiseOwnedResPage;","import React, { Component } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport './BulletinMenuBar.css';\n\nexport default class BulletinMenuBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: props.options[0], //default\n        }\n    }\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name });\n        this.props.handleCategoryClick(name);\n    }\n\n    render() {\n        const { activeItem } = this.state;\n\n        return (\n            <Menu size='massive' pointing secondary inverted className=\"w-75 pl4 ml3\">\n                {this.props.options.map((str, index) => {\n                    return <Menu.Item\n                        name={str}\n                        active={activeItem === str }\n                        onClick={this.handleItemClick}\n                        className='bulletinBar white'\n                        key={index}\n                    />\n                })\n                }\n            </Menu>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\n\nimport url from '../../Config/url'\nimport RestaurantDisplayBulletin from '../../Components/Bulletins/RestaurantDisplayBulletin';\nimport BulletinMenuBar from '../../Components/MenuBar/BulletinMenuBar';\n\n/**\n * Rendered Page that shows the entire list of Restaurants for browsing\n */\nclass CustomerRestaurantListPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allRestaurants: [],\n            compatibleRestaurants: [],\n            loading: true,\n            visible: 12,\n            showAll: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchAllRestaurants();\n    }\n\n    fetchAllRestaurants() {\n        this.setState({loading: true});\n        fetch(`${url.fetchURL}/resData`)\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    allRestaurants: data,\n                    loading: false,\n                });\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    fetchCompatibleRestaurants() {\n        this.setState({loading: true});\n        fetch(`${url.fetchURL}/compatible`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userid: this.props.userID\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    compatibleRestaurants: data,\n                    loading: false,\n                });\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    loadMore = () => {\n        this.setState({\n            visible: (this.state.visible) + 12,\n        })\n    }\n\n    handleCategoryClick = (cat) => {\n        if (cat === 'All Restaurants') { //select all\n            this.fetchAllRestaurants();\n            this.setState({\n                showAll: true\n            });\n        } else { //select compatible\n            this.fetchCompatibleRestaurants()\n            this.setState({\n                showAll: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <div className=\"w-75 pt5 center bb b--black-10 relative\">\n                    <h1 className=\"tc baskerville f1 fw5\"> All Restaurants</h1>\n                </div> */}\n                <div className = 'mt4 w-50 center'>\n                    <BulletinMenuBar\n                        handleCategoryClick={this.handleCategoryClick.bind(this)}\n                        options={[\"All Restaurants\", \"Compatible Restaurants\"]}\n                    />\n                </div>\n\n\n                <div className='pa4'>\n                    <RestaurantDisplayBulletin\n                        loading={this.state.loading}\n                        resDisplay={\n                            this.state.showAll\n                                ? this.state.allRestaurants\n                                : this.state.compatibleRestaurants\n                            }\n                        visibleItemsNum={this.state.visible}\n                        totalLength={\n                            this.state.showAll\n                                ? this.state.allRestaurants.length\n                                : this.state.compatibleRestaurants.length\n                            }\n                        loadMore={this.loadMore}\n                    />\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CustomerRestaurantListPage;","import React, { Component } from 'react';\nimport FranchiseOwnedResPage from './FranchiseOwnedResPage';\nimport CustomerRestaurantListPage from './CustomerRestaurantListPage';\n\n/**\n * A simple page to show the entire list of Restaurants (For Customers),\n * or the entire list of Restaurants owned by a Franchise\n */\nclass RestaurantsListPage extends Component {\n\n    render() {\n        const { userID, isFranchiseOwner } = this.props;\n        return (\n            <div>\n                <div className=\"pt0 mt0\">\n                    {\n                        isFranchiseOwner\n                            ? <FranchiseOwnedResPage userID={userID} />\n                            : <CustomerRestaurantListPage userID={userID}/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RestaurantsListPage;","import React, { Component } from 'react';\nimport { Button, Modal, Rating } from 'semantic-ui-react'\nimport url from '../../Config/url'\n\n/**\n * Modal that is used to Post/Update Ratings of Past Reservations\n */\nclass RateModal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clicked: false,\n            rating: 0,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ rating: this.props.data.rating });\n    }\n\n    handleRate = (e, { rating }) => {\n        this.setState({ rating })\n    }\n\n    postRating = () => {\n        const { data, userID } = this.props;\n        const { resName, location, dateTime, table, resid } = data;\n        fetch(`${url.fetchURL}/giveReview`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: userID,\n                location: location,\n                resName: resName,\n                dateTime: dateTime,\n                table: table,\n                rating: this.state.rating,\n                resid: resid\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'Success') {\n                    this.setState({ clicked: true });\n                }\n            })\n    }\n\n    render() {\n        return (\n            <Modal\n                trigger={<Button> Rate </Button>}\n                onClose={() => this.props.fetchReservations()}\n                size={'small'}\n            >\n                <Modal.Header className='tc'>Post a Rating</Modal.Header>\n                <Modal.Content>\n                    <Rating maxRating={5} clearable rating={this.state.rating} onRate={this.handleRate} className='mb2' />\n                    <br />\n                    <Button negative onClick={() => this.postRating()} content='Confirm/Update Rating' />\n                    {\n                        this.state.clicked &&\n                        <div className='black mb2'>Your rating has been posted. Click out of this modal to exit</div>\n                    }\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default RateModal;\n\n","const dateParser = (dateTimeObj) => {\n    const dateOnly = dateTimeObj.toDateString();\n    const timeOnly = dateTimeObj.toTimeString().substring(0,8)\n\n    return dateOnly + \" \" + timeOnly;\n}\n\nexport default dateParser;","import React from 'react';\nimport { Icon, Image, Card, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\n\n\nimport RateModal from '../Modals/RateModal'\nimport dateParser from '../../Common/ParserUtil';\nimport foodImage from '../../Images/food.jpg';\nimport './CustomerResCard.css';\n\nconst CustomerResCard = ({ data, isCurrent, userID, fetchReservations }) => {\n    const { resName, resUrl, dateTime, table, pax } = data;\n\n    return (\n        <Card className=\"ui card\" id='ResvCard'>\n            <Image\n                fluid\n                src={foodImage}\n                alt=\"Error\" className=\"w-100\" id=\"cardImage\"\n            />\n\n            <Card.Content>\n                <Card.Header className='NameHeader'>\n                    <Link to={`/restaurants/${resUrl}`}>\n                        {resName}\n                    </Link>\n                </Card.Header>\n\n                <div>\n                    <Card.Meta>\n                        <Icon name='clock' />\n                        <span className='ml1'>{dateParser(dateTime)}</span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <Icon name='table' />\n                        <span className='ml1'>{table}</span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <Icon name='user' />\n                        <span className='ml1'>{pax}</span>\n                    </Card.Meta>\n\n                </div>\n            </Card.Content>\n            {isCurrent\n                ? <Button\n                    data={data}\n                    userID={userID}\n                >\n                    <Link to={{ pathname: '/editresv', state: { resvData: data, userID: userID } }} id = \"link\">\n                        Edit Reservations\n                    </Link>\n                </Button>\n                : <RateModal data={data} userID={userID} fetchReservations={fetchReservations} />\n            }\n        </Card>\n    )\n}\n\n\nexport default CustomerResCard;","import React, { Component } from 'react';\nimport CustomerResCard from '../../Components/Cards/CustomerResCard';\nimport BulletinMenuBar from '../../Components/MenuBar/BulletinMenuBar';\nimport url from '../../Config/url';\n\nimport './CustomerRes.css'\nimport Loading from '../../Components/Loaders/Loading';\nimport LoadMoreButton from '../../Components/Button/LoadMoreButton';\n\n/**\n * Page that shows the list of Reservations that a customer has made\n */\nclass CustomerRes extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            reservations: [], //contains all reservations from database\n            filteredReservations: [], //Filtered shown list of reservations\n            loading: true,\n            isCurrent: true, //default true, else false: shows past\n            visible: 8,\n        }\n    }\n    componentDidMount() {\n        setTimeout(this.fetchReservations(), 3000);\n    }\n\n    fetchReservations() {\n        fetch(`${url.fetchURL}/seeMyResv`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID,\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => { //data is an Array\n\n                const resvData = data.map(x => {\n                    const dateObj = {\n                        dateTime: new Date(x.dateTime),\n                    };\n                    return Object.assign(x, dateObj)\n                });\n                this.setState({\n                    reservations: resvData,\n                    loading: false,\n                });\n                this.state.isCurrent\n                    ? this.handleCategoryClick('current')\n                    : this.handleCategoryClick('past');\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    loadMore = () => {\n        this.setState({\n            visible: (this.state.visible) + 8,\n        })\n    }\n\n    handleCategoryClick = (cat) => {\n        if (cat === 'current') { //select current\n            const filteredData = this.state.reservations.filter(x => x.dateTime >= new Date()); //future date\n            this.setState({\n                filteredReservations: filteredData,\n                isCurrent: true\n            });\n        } else { //select past\n            const filteredData = this.state.reservations.filter(x => x.dateTime < new Date());\n            this.setState({\n                filteredReservations: filteredData,\n                isCurrent: false\n            });\n        }\n    }\n\n    render() {\n        const { userID } = this.props;\n\n        return (\n            <div>\n                <BulletinMenuBar\n                    handleCategoryClick={this.handleCategoryClick.bind(this)}\n                    options={[\"current\", \"past\"]}\n                />\n\n                {this.state.loading\n                    ? <Loading />\n                    : <div>\n                        <div id='CardDisplay'>\n                            {this.state.filteredReservations.slice(0, this.state.visible).map((data) => {\n                                return <CustomerResCard\n                                    fluid\n                                    centered\n                                    data={data}\n                                    isCurrent={this.state.isCurrent}\n                                    userID={userID}\n                                    key={data.resUrl}\n                                    fetchReservations={this.fetchReservations.bind(this)}\n                                />\n                            })\n                            }\n                        </div>\n                        {this.state.visible < this.state.filteredReservations.length \n                            && <LoadMoreButton loadMore={this.loadMore} />\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default CustomerRes;","import React from 'react';\nimport { Icon, Card } from 'semantic-ui-react';\n\nimport dateParser from '../../Common/ParserUtil';\n\nconst FResCard = ({ data }) => {\n    const dateObj = {\n        dateTime: new Date(data.dateTime),\n    }\n    data = Object.assign(data, dateObj);\n\n    const { userID, table, pax, dateTime } = data;\n\n    return (\n        <Card className=\"ui card\" id='ResvCard'>\n            <Card.Content>\n                <Card.Header className = 'mb2'>\n                Customer UserID: {userID}\n                </Card.Header>\n\n                <div>\n                    <Card.Meta>\n                        <Icon name='clock' />\n                        <span className='ml1'>{dateParser(dateTime)}</span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <Icon name='table' />\n                        <span className='ml1'>{table}</span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <Icon name='user' />\n                        <span className='ml1'>{pax}</span>\n                    </Card.Meta>\n\n                </div>\n            </Card.Content>\n        </Card>\n    )\n}\n\nexport default FResCard;","import React from 'react';\nimport { Accordion, Icon, Grid } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport FResCard from '../Cards/FResCard';\n\n/**\n * Contains the data of all reservations for a speicfic restaurant\n * Restaurants that are \n */\nconst RestaurantAccordion = ({ index, activeIndex, handleClick, reservData }) => {\n    const { resName, resUrl, reservations } = reservData; //reservations is an array of objects\n    return (\n        <div>\n            <Accordion.Title\n                active={activeIndex === index}\n                index={index}\n                onClick={handleClick}\n            >\n                <Icon name='dropdown' />\n                <Link to={`/restaurants/${resUrl}`}>\n                    {resName}\n                </Link>\n            </Accordion.Title>\n            <Accordion.Content active={activeIndex === index}>\n                <Grid columns={4}>\n                    {reservations.map((reserv,index) => {\n                        return <Grid.Column>\n                            <FResCard data={reserv}\n                                key={index}\n                            />\n                        </Grid.Column>\n                    })}\n                </Grid>\n            </Accordion.Content>\n        </div>\n    )\n}\n\nexport default RestaurantAccordion;","import React, { Component } from 'react';\nimport { Accordion } from 'semantic-ui-react'\n\nimport url from '../../Config/url';\nimport RestaurantAccordion from '../../Components/Accordions/RestaurantAccordion';\n\n/**\n * Container of Accordions that display Reservations for each owned Restaurant of the FranchiseOwner\n */\nclass FOwnerRes extends Component {\n    state = {\n        activeIndex: '',\n        loading: true,\n        allRestReserv: []\n    }\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n\n        this.setState({ activeIndex: newIndex })\n    }\n\n    componentDidMount() {\n        fetch(`${url.fetchURL}/viewAllReservations`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                franchiseUserID: this.props.userID,\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    allRestReserv: data,\n                    loading: false,\n                });\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        const { activeIndex } = this.state\n        return (\n            <Accordion fluid styled className='relative'>\n                {\n                    this.state.allRestReserv.map((restaurant, index) => {\n                        return <RestaurantAccordion\n                            index={index}\n                            activeIndex={activeIndex}\n                            handleClick={this.handleClick.bind(this)}\n                            reservData={restaurant}\n                            key={restaurant.resUrl}\n                        />\n                    })\n                }\n            </Accordion>\n        );\n    }\n}\n\nexport default FOwnerRes;","import React, { Component } from 'react';\nimport CustomerRes from '../Reservations/CustomerRes';\nimport FOwnerRes from './FOwnerRes';\n\nimport './CustomerRes.css'\n\n/**\n * Container that renders Reservations Pages depending on the type of user logged in\n */\nclass Reservations extends Component {\n    render() {\n        const { isFranchiseOwner, userID } = this.props;\n        return (\n            <div className=\"w-75 pt5 pb0 mb0 center bb b--black-10\">\n                <div className=\"pt0 mt0\">\n                    {isFranchiseOwner\n                        ? <FOwnerRes userID={userID} />\n                        : <CustomerRes userID={userID} />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Reservations;","import React from 'react';\nimport { Label } from \"semantic-ui-react\";\n\nconst InputErrorLabel = ({ touched, errorText }) => {\n    if (touched && errorText) {\n        return (\n            <Label className='tl' basic color='red' pointing>\n                {errorText}\n            </Label>\n        );\n    } else {\n        return null;\n    }\n}\n\nexport default InputErrorLabel;","import React from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react'\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport InputErrorLabel from '../Label/InputErrorLabel';\nimport url from '../../Config/url';\nimport './LoginForm.css';\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    render() { //isSignedIn, loginUser\n        return (\n            <Formik\n                initialValues={{\n                    userID: '',\n                    password: '',\n                }}\n\n                onSubmit={(values) => {\n                    fetch(`${url.fetchURL}/login`, {\n                        method: 'post',\n                        headers: { 'Content-type': 'application/json' },\n                        body: JSON.stringify({\n                            userID: values.userID,\n                            password: values.password\n                        })\n                    })\n                        .then(resp => resp.json())\n                        .then(data => {\n                            if (data.userID && data.name) { //successful\n                                this.props.loginUser(data.userID, data.name, data.franchiseOwner);\n                                this.props.history.push(\"/\"); //go to main page\n                            }\n                            else if (data === 'No such user') {\n                                this.setState({\n                                    result: 'Error: No Such User'\n                                })\n                            } else if (data === 'incorrect password') {\n                                this.setState({\n                                    result: 'Error: Incorrect Password'\n                                })\n                            } else { //error\n                                this.setState({\n                                    result: 'Error, Unable to Retrieve Login Credentials'\n                                })\n                                throw new Error();\n                            }\n                        }).catch(err => {\n                            alert(err);\n                        })\n                }}\n\n                validationSchema={yup.object().shape({\n                    userID: yup.string().required(\"This field is required\"),\n                    password: yup.string().required(\"This field is required\")\n                })}\n\n                render={({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n                    return (\n                        <Form size='large' >\n                            <Form.Field className='flex flex-column items-center'>\n                                <Input\n                                    type='text'\n                                    placeholder='UserID'\n                                    name='userID'\n                                    className='registerFormText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.userID}\n                                />\n                                <InputErrorLabel touched={touched.userID} errorText={errors.userID} />\n                            </Form.Field>\n\n                            <Form.Field className='flex flex-column items-center'>\n                                <Input\n                                    type='password'\n                                    placeholder='Password'\n                                    name='password'\n                                    className='registerFormText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                />\n                                <InputErrorLabel touched={touched.password} errorText={errors.password} />\n\n                            </Form.Field>\n                            <div id='LoginButs'>\n                                <Button className='w-30' type='submit' onClick={handleSubmit}>\n                                    Login\n                                </Button>\n                            </div>\n\n                            <div className='mt3 white tc'>\n                                {this.state.result}\n                            </div>\n\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n\n}\n\nexport default LoginForm;","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport LoginForm from '../../Components/LoginForm/LoginForm'; \nimport './LoginPage.css';\n\nconst LoginPage = (props) => { //isSignedIn, loginUser\n    return (\n        <div className='relative'>\n            \n                <div id='RegisterText'>\n                    <p className='mb2 text1 tc'> Not registered as a member? </p>\n                    <p className='mb2 text2 tc'> Create your account today</p>\n                </div>\n                <div id='Register'> \n                    <Button className='button w-30'> \n                        <Link to=\"/register\" className='white'>\n                            Register\n                        </Link> \n                    </Button>\n                </div>\n            <div id='LoginSegment' className=\"w-25 mt4 pt3 flex flex-column items-center center\">\n                <h1 className=\"tc baskerville f1 fw5 mb0\">Welcome Back</h1>\n                <p> Have an account already?</p>\n            </div>\n            <div className='mh4 mv3' id='loginContainer'>\n                <LoginForm {...props}/>  \n            </div>\n        </div>\n    );\n}\n\n\nexport default LoginPage;","import React from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react'\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport './RegisterForm.css';\n\nimport url from '../../Config/url';\nimport InputErrorLabel from '../Label/InputErrorLabel';\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: ''\n        }\n    }\n\n    render() {\n        return (\n            <Formik\n                initialValues={{\n                    name: '',\n                    userID: '',\n                    password: '',\n                    confirmPassword: ''\n                }}\n\n                onSubmit={(values) => {\n                    fetch(`${url.fetchURL}/register`, {\n                        method: 'post',\n                        headers: { 'Content-type': 'application/json' },\n                        body: JSON.stringify({\n                            name: values.name,\n                            userID: values.userID,\n                            password: values.password\n                        })\n                    })\n                        .then(resp => resp.json())\n                        .then(data => {\n                            if (data === values.userID) { //successful\n                                this.setState({\n                                    result: 'Successful Registration'\n                                });\n                            }\n                            else if (data === 'Username Already Taken') { \n                                this.setState({\n                                    result: 'Username already taken'\n                                })\n                            } else { //error\n                                this.setState({\n                                    result: 'Error, cannot register'\n                                })\n                                throw new Error();\n                            }   \n                        }).catch(err => {\n                            alert(err);\n                        })\n                }}\n\n                validationSchema={yup.object().shape({\n                    name: yup.string().required(\"This field is required\")\n                        .min(3, \"Your Name cant be that short\")\n                        .max(100, \"Your Name cant be that long\"),\n                    userID: yup.string().required(\"This field is required\")\n                        .min(5, \"Please enter a UserID of at least length 5\")\n                        .max(50, \"Please use a shorter UserID\"),\n                    password: yup.string().required(\"This field is required\")\n                        .min(8, \"Please enter a password of at least 8 characters\")\n                        .max(40, \"Please use a shorter password\"),\n                    confirmPassword: yup.string().required(\"This field is required\")\n                        .test('passwords-match', 'Passwords must match', function (value) {\n                            return this.parent.password === value;\n                        }),\n                })}\n\n                render={({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => {\n                    return (\n                        <Form size='large' >\n                            <Form.Field className='flex flex-column items-center'>\n                                <Input\n                                    type='text'\n                                    placeholder='Name'\n                                    name='name'\n                                    className='registerFormText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.name}\n\n                                />\n                                <InputErrorLabel touched={touched.name} errorText={errors.name} />\n                            </Form.Field>\n\n                            <Form.Field className='flex flex-column items-center'>\n                                <Input\n                                    type='text'\n                                    placeholder='UserID'\n                                    name='userID'\n                                    className='registerFormText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.userID}\n                                />\n                                <InputErrorLabel touched={touched.userID} errorText={errors.userID} />\n                            </Form.Field>\n\n                            <Form.Field className='flex flex-column items-center'>\n                                <Input\n                                    type='password'\n                                    placeholder='Password'\n                                    name='password'\n                                    className='registerFormText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                />\n                                <InputErrorLabel touched={touched.password} errorText={errors.password} />\n\n                            </Form.Field>\n\n                            <Form.Field className='flex flex-column items-center'>\n                                <Input\n                                    type='password'\n                                    placeholder='Confirm Password'\n                                    name='confirmPassword'\n                                    className='registerFormText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.confirmPassword}\n                                />\n                                <InputErrorLabel touched={touched.confirmPassword} errorText={errors.confirmPassword} />\n\n                            </Form.Field>\n\n                            <div id='LoginButs'>\n                                <Button className='button' type='submit' onClick={handleSubmit}>\n                                    Register\n                                </Button>\n                            </div>\n\n                            <div className = 'mt3 white tc'>\n                                {this.state.result}\n                            </div>\n\n                        </Form>\n                    );\n                }}\n            />\n\n        );\n    }\n\n}\n\nexport default RegisterForm;","import React from 'react';\nimport RegisterForm from '../../Components/RegisterForm/RegisterForm'; \nimport './RegisterPage.css';\n\nconst RegisterPage = () => {\n    return (\n        <div className='' id=''>\n            <div className=\"w-75 pt5 flex flex-column items-center center\">\n                <h1 className=\"tc baskerville f1 fw5\">Register Page</h1>\n            </div>\n            <div className='mh4 mv3' id='RegisterContainer'>\n                <RegisterForm/>  \n            </div>\n        </div>\n    );\n}\n\n\nexport default RegisterPage;","const PaxOptions = [\n    { key: '1', text: '1', value: 1 },\n    { key: '2', text: '2', value: 2 },\n    { key: '3', text: '3', value: 3 },\n    { key: '4', text: '4', value: 4 },\n    { key: '5', text: '5', value: 5 },\n    { key: '6', text: '6', value: 6 },\n    { key: '7', text: '7', value: 7 },\n    { key: '8', text: '8', value: 8 },\n    { key: '9', text: '9', value: 9 },\n    { key: '10', text: '10', value: 10 },\n];\n\nexport default PaxOptions;","import React from 'react';\nimport { Button, Modal, Icon, Dimmer, Loader } from 'semantic-ui-react'\n\n/**\n * ConfirmBookingModal Component that is used on the BookRestaurantForm\n */\nconst ConfirmBookingModal = ({ submit, values, submitted, noSeats, noDouble, notOpen, available, loading, reset }) => {\n    return (\n        <Modal\n            trigger={<Button>Book</Button>}\n            dimmer={'inverted'}\n            onClose={() => reset()}>\n            <Modal.Header>Booking Confirmation</Modal.Header>\n\n            {loading &&\n                <Dimmer active inverted>\n                    <Loader inverted>Loading</Loader>\n                </Dimmer>\n            }\n\n            <Modal.Content >\n                {\n                    !submitted &&\n                    <div>\n                        <Modal.Description className='f3 lh-copy mb4 underline'>\n                            Please confirm your reservation details:\n                        </Modal.Description>\n                        <Modal.Description className='f4'>\n                            <b>Reservation Date&Time: </b> {values.date.toString()}\n                        </Modal.Description>\n                        <Modal.Description className='f4'>\n                            <b>Number of Pax: </b>{values.pax}\n                        </Modal.Description>\n                        <Modal.Description className='f4'>\n                            <b>Voucher: </b>{values.voucher}\n                        </Modal.Description>\n                    </div>\n                }\n\n                {available &&\n                    <Modal.Description>\n                        Congratulations! Your Reservation is Confirmed on <b>{values.date.toString()}</b>\n                    </Modal.Description>\n                }\n\n                {noSeats &&\n                    <Modal.Description className='red'>\n                        Unfortunately, there are no seats left at the timeslot that you wanted to book<br />\n                        Please try another timing\n                    </Modal.Description>\n                }\n\n                {noDouble &&\n                    <Modal.Description className='red'>\n                        Sorry, you already have booked another reservation at that timing.<br/>\n                    </Modal.Description>\n                }\n\n                {notOpen &&\n                    <Modal.Description className='red'>\n                        Sorry, the restaurant is not open at this timing.<br/>\n                    </Modal.Description>\n                }\n\n            </Modal.Content>\n            {!submitted &&\n                <Modal.Actions>\n                    <Button onClick={() => submit()} color='green' inverted>\n                        <Icon name='checkmark' /> Confirm\n                </Button>\n                </Modal.Actions>\n            }\n        </Modal>\n    );\n}\n\nexport default ConfirmBookingModal;","import React from 'react';\nimport { Form } from 'semantic-ui-react'\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Flatpickr from 'react-flatpickr'\n\nimport PaxOptions from '../../Data/PaxOptions';\nimport ConfirmBookingModal from '../../Components/Modals/ConfirmBookingModal';\nimport InputErrorLabel from '../../Components/Label/InputErrorLabel';\nimport url from '../../Config/url';\nimport 'flatpickr/dist/themes/light.css'\n\n/**\n * Form used for the Booking of a Reservation at a Restaurant\n * Required Customer to state Date&Time of Booking and Number of Pax.\n */\n\nconst initialState = {\n    available: false,\n    noSeats: false,\n    noDouble: false,\n    notOpen: false,\n    loading: false,\n    submitted: false,\n}\n\nclass BookRestaurant extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initialState,\n            'voucherUseList': [],\n        }\n    }\n\n    componentDidMount() {\n        this.createDropdown('voucherUseList');\n    }\n\n    createDropdown = (route) => {\n        fetch(`${url.fetchURL}/${route}`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID,\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                data.filter(x => data.owned > 0).map(x => data.voucherName)\n                const dropdownOptions = [];\n                dropdownOptions.push({ key: '0', text: 'None', value: 'None' });\n                data.forEach((data, index) => {\n                    const obj = {\n                        key: index,\n                        text: data.voucher_code + \"(\" + data.count + \")\",\n                        value: data.voucher_code\n                    }\n                    dropdownOptions.push(obj);\n                })\n                const obj = {};\n                obj[route] = dropdownOptions;\n                this.setState(obj);\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    useVoucher = (userID, voucherCode) => {\n        if(voucherCode === 'None') return;\n        fetch(`${url.fetchURL}/useVoucher`, {\n            method: 'put',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: userID,\n                voucherCode: voucherCode,\n            })\n        }).then(resp => resp.json())\n        .then(data => {\n        }).catch(err => alert(err));\n    }\n\n    resetState = () => {\n        this.setState(initialState);\n    }\n\n    render() {\n        const { userID, resUrl, franchisorId, location, isEditing } = this.props;\n\n        return (\n            <Formik\n                initialValues={{\n                    date: '',\n                    pax: '',\n                    voucher: '',\n                }}\n\n                onSubmit={(values) => {\n                    let urlToUse;\n                    isEditing\n                        ? urlToUse = 'editResv'\n                        : urlToUse = 'resvAvailability'\n                    this.setState({ loading: true });\n                    fetch(`${url.fetchURL}/${urlToUse}`, {\n                        method: 'post',\n                        headers: { 'Content-type': 'application/json' },\n                        body: JSON.stringify({\n                            userID: userID,\n                            franchisorId: franchisorId,\n                            location: location,\n                            resUrl: resUrl,\n                            dateTime: values.date,\n                            pax: values.pax,\n                            oldDateTime: isEditing ? this.props.oldDateTime : null,\n                            oldTableNumber: isEditing ? this.props.oldTableNumber : null,\n                        })\n                    })\n                        .then(resp => resp.json())\n                        .then(data => {\n                            this.setState({ submitted: true, loading: false });\n                            switch (data) {\n                                case 'available': //todo: After check availability, if available, will do another POST to insert into DB\n                                    this.setState({ available: true })\n                                    this.useVoucher(userID, values.voucher);\n                                    break;\n                                case 'noSeats':\n                                    this.setState({ noSeats: true })\n                                    break;\n                                case 'noDouble':\n                                    this.setState({ noDouble: true })\n                                    break;\n                                case 'notOpen':\n                                    this.setState({notOpen: true})\n                                    break;\n                                default: //some error s\n                                    break;\n                            }\n\n                        }).catch(err => {\n                            alert(err);\n                        })\n                }}\n\n                validationSchema={yup.object().shape({\n                    date: yup.date(\"Invalid Date\")\n                        .min(new Date(), \"Your cannot state a past date\")\n                        .required(\"You must state a date\"),\n                    pax: yup.number().min(1).max(10).required(\"You must state the number of diners\"),\n                })}\n\n                render={({ values, errors, touched, handleChange, handleBlur, handleSubmit, setFieldValue }) => {\n                    const handleDropdownChange = (e, { name, value }) => {\n                        setFieldValue(name, value);\n                    };\n\n                    return (\n                        <Form size='large' className='ba b--light-silver pt3 pl3 pr2 appColor'>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <Flatpickr\n                                        data-enable-time\n                                        options={{ minDate: 'today', maxDate: new Date().fp_incr(30) }}\n                                        placeholder=\"Reservation Date & Time\"\n                                        onChange={e => setFieldValue('date', e[0])}\n                                        onBlur={handleBlur}\n                                        value={values.date}\n                                        name=\"date\"\n                                    />\n                                    <InputErrorLabel touched={touched.date} errorText={errors.date} />\n                                </Form.Field>\n\n                                <Form.Field>\n                                    <Form.Select //Dropdown\n                                        placeholder='Pax'\n                                        name=\"pax\"\n                                        options={PaxOptions}\n                                        value={values.pax}\n                                        onChange={handleDropdownChange}\n                                    />\n                                    <InputErrorLabel touched={touched.pax} errorText={errors.pax} />\n                                </Form.Field>\n\n                                <Form.Field>\n                                    <Form.Select //Dropdown\n                                        placeholder='Voucher Code'\n                                        name=\"voucher\"\n                                        options={this.state.voucherUseList}\n                                        value={values.voucher}\n                                        onChange={handleDropdownChange}\n                                    />\n                                    <InputErrorLabel touched={touched.voucher} errorText={errors.voucher} />\n                                </Form.Field>\n\n                                <ConfirmBookingModal\n                                    errors={errors}\n                                    submit={handleSubmit}\n                                    values={values}\n                                    submitted={this.state.submitted}\n                                    noSeats={this.state.noSeats}\n                                    noDouble={this.state.noDouble}\n                                    notOpen={this.state.notOpen}\n                                    available={this.state.available}\n                                    loading={this.state.loading}\n                                    reset={this.resetState}\n                                />\n                            </Form.Group>\n                        </Form>\n                    );\n                }}\n            />\n        );\n    }\n}\n\nexport default BookRestaurant;","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react'\n\n/**\n * A card representing a food item\n * foodData is an object that consists of the keys name, cuisine, type and price\n */\nconst FoodCard = ({ foodData }) => {\n    const { name, cuisine, type, price } = foodData;\n    return (\n        <div className=''>\n            <Header as='h2' attached='top'>\n                {name}\n            </Header>\n            <Segment attached className=''>\n                <p className='black'>Cuisine: {cuisine}</p>\n                <p className='black'>Type: {type}</p>\n                <p className='black'>Price: {price}</p>\n            </Segment>\n        </div>\n\n    );\n}\n\nexport default FoodCard;","import React from 'react';\nimport { Button, Modal } from 'semantic-ui-react'\nimport FoodCard from '../Cards/FoodCard';\n\n/**\n * MenuModal Component that is used on the RestaurantPage\n * menuData is an array of objects, each representing a food item.\n */\nconst MenuModal = ({menuData}) => {\n    return (\n        <Modal trigger={<Button>Menu</Button>} dimmer = {'inverted'}>\n            <Modal.Header>Menu</Modal.Header>\n            <Modal.Content scrolling>\n                <Modal.Description>\n                    {\n                        menuData.map(data => {\n                            return (\n                                <FoodCard \n                                    key = {data.name}\n                                    foodData = {data}/>\n                            );\n                        })\n                    }\n\n                    \n                </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default MenuModal;","import React from 'react';\nimport MenuModal from '../../Components/Modals/MenuModal';\nimport './RestaurantDetailBox.css';\n\nconst RestaurantDetailBox = (props) => {\n    const { location, area, opening_hours, closing_hours, cuisine, price } = props.resData;\n    const specialOpHrsArr = props.specialOpHrs; //array of keys: day, open, close\n\n    return (\n        <div id='resDetailsBox' className='relative flex flex-row justify-center mt4 mb4'>\n            <div className='flex flex-column pr3 detailBoxColumn'>\n                <div className='containerText fl'>\n                    <h3 className='b f3'> Cuisine </h3>\n                    <p className=''> {cuisine} </p>\n                </div>\n\n                <div className='containerText'>\n                    <MenuModal menuData={props.menuData} />\n                </div>\n\n                <div className='containerText'>\n                    <h3 className='b f3'> Price </h3>\n                    <p className=''> {price} </p>\n                </div>\n\n                <div className='containerText'>\n                    <h3 className='b f3'> Location </h3>\n                    <p className=''> {area} </p>\n                </div>\n\n                <div className='containerText mw5 addressField'>\n                    <h3 className='b f3'> Address </h3>\n                    <p className=''> {location} </p>\n                </div>\n            </div>\n\n            <div className='flex flex-column'>\n                <div className='containerText'>\n                    <h3 className='b f3'> Opening Hours </h3>\n                    <p className=''>\n                        Mon-Sun: {opening_hours} - {closing_hours}\n                    </p>\n                </div>\n\n                <div className='containerText'>\n                    <h3 className='b f3'> Special Operating Hours: </h3>\n                    {\n                        specialOpHrsArr.length === 0\n                            ? <p>None listed</p>\n                            : <div> {\n                                specialOpHrsArr.map(entry => {\n                                    const string = entry.day + \": \" + entry.open + \"-\" + entry.close;\n                                    return <p>{string}</p>\n                                })\n                            } </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RestaurantDetailBox;","import React from 'react';\nimport { Icon, Card } from 'semantic-ui-react';\nimport './LoyalCustomerCard.css'\n\nconst LoyalCustomerCard = ({loyalCustomerData}) => {\n\n    const { userID, numBookings, percentBookings } = loyalCustomerData;\n\n    return (\n        <Card>\n            <Card.Content>\n                <Card.Header className = 'mb2 loyalHeaderText'>\n                Customer UserID: {userID}\n                </Card.Header>\n\n                <div>\n                    <Card.Meta>\n                        <Icon name='book' />\n                        <span className='ml1 loyalText'> Number of Bookings: {numBookings} </span>\n                    </Card.Meta>\n                    <Card.Meta>\n                        <Icon name='percent' />\n                        <span className='ml1 loyalText'> Percentage of Bookings: {percentBookings} </span>\n                    </Card.Meta>\n\n                </div>\n            </Card.Content>\n        </Card>\n    )\n}\n\nexport default LoyalCustomerCard;","import React, { Component } from 'react';\nimport NonExistentPage from '../NonExistentPage';\nimport url from '../../Config/url';\nimport './LandingPage.css';\nimport BookRestaurant from '../SearchForm/BookRestaurant';\nimport food from '../../Images/food.jpg'\nimport RestaurantDetailBox from './RestaurantDetailBox';\nimport LoyalCustomerCard from '../../Components/Cards/LoyalCustomerCard';\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: true,\n            noLoyalCustomer: false,\n            name: '',\n            loyalCustomerData: {},\n            resData: {}, //Array of objs, Select * from Restaurants\n            menuData: [],\n            specialOpHrs: [],\n        }\n    }\n\n    componentDidMount() {\n        const name = this.props.match.params.name;\n        this.setState({ name: name });\n\n        fetch(`${url.fetchURL}/restaurant/${name}`)\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'Unable to Retrieve') {\n                } else {\n                    this.setState({ resData: data, notFound: false });\n                }\n            });\n\n        fetch(`${url.fetchURL}/restaurantmenu/${name}`)\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'Unable to Retrieve') {\n                } else {\n                    this.setState({ menuData: data });\n                }\n            });\n\n        fetch(`${url.fetchURL}/restaurantSpecialHrs/${name}`)\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'Unable to Retrieve') {\n                } else {\n                    this.setState({ specialOpHrs: data });\n                }\n            });\n\n\n        fetch(`${url.fetchURL}/mostLoyalCustomer`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                name: name\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'Unable to Retrieve') {\n                    this.setState({ noLoyalCustomer: true });\n                } else {\n                    this.setState({ loyalCustomerData: data });\n                }\n            }).catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const { isSignedIn, userID, isFranchiseOwner } = this.props;\n        if (this.state.notFound) {\n            return (\n                <NonExistentPage />\n            )\n        } else {\n            return (\n                <article id='landingPage'>\n                    <img\n                        className=\"mt3 pt4 relative\"\n                        id='pageImage'\n                        src=\"\"\n                        onError={(e) => { e.target.onerror = null; e.target.src = food }}\n                        alt=\"Error\" />\n\n                    <div className=\"pv3\">\n                        <h1 className='f2 pageText relative tc'> {this.state.resData.store_name} </h1>\n                    </div>\n\n                    {(!isFranchiseOwner && isSignedIn) &&\n                        <div className=\"pt2 pl7 pr7 relative\" id='BookBox'>\n                            <BookRestaurant\n                                userID={userID}\n                                resUrl={this.state.resData.resUrl}\n                                location={this.state.resData.location}\n                                franchisorId={this.state.resData.userid} //of franchisor\n                                isEditing = {false}\n                            />\n                        </div>\n                    }\n\n                    <RestaurantDetailBox\n                        userID={userID}\n                        resData={this.state.resData}\n                        menuData={this.state.menuData}\n                        specialOpHrs={this.state.specialOpHrs}\n                        className='restaurantDetails'\n                    />\n\n                    {(isFranchiseOwner && isSignedIn) &&\n                        <div className='flex flex-column justify-center items-center mb5'>\n                            <h1 className=''> Most Loyal Customer </h1>\n                            {this.state.noLoyalCustomer\n                                    ? <div className = 'white'>No Data Yet!</div>\n                                    : <LoyalCustomerCard loyalCustomerData={this.state.loyalCustomerData} />\n                            }\n\n                        </div>\n                    }\n                </article>\n            );\n        }\n    }\n}\n\nexport default LandingPage;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            path = {rest.path}\n            exact\n            render={props => {\n                if (rest.isSignedIn) {\n                    return <Component {...props} {...rest}/>;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport { Header, Segment, Button } from 'semantic-ui-react'\n\nimport url from '../../Config/url';\nimport './VoucherCard.css'\n\n/**\n * A card representing a VoucherCard\n */\nexport default class VoucherCard extends Component {\n    state = {\n        buyingLoad: false,\n        buySuccess: false,\n        error: false,\n    }\n\n    buyVoucher = () => {\n        this.setState({ buyingLoad: true });\n        fetch(`${url.fetchURL}/buyVoucher`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID,\n                voucherName: this.props.data.voucherName\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'success') {\n                    this.setState({ buyingLoad: false, buySuccess: true })\n                    this.props.refresh()\n                } else { //not enough points\n                    this.setState({ buyingLoad: false, error: true })\n                    this.props.refresh()\n                }\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        const { voucherName, cost, discount, description, owned, canBuy } = this.props.data;\n        const square = { width: 300, height: 300 }\n\n        return (\n            <div id='VoucherContainer'>\n                <Segment circular style={square}>\n                    <Header as='h2' className='voucherFont'>\n                        {voucherName}\n                        <div className='pb2 pt2'>\n                            <Header.Subheader className='voucherFont'> {description} </Header.Subheader>\n                        </div>\n                        <div className='pb2'>\n                            <Header.Subheader className='voucherFont'> Discount: {discount}% OFF </Header.Subheader>\n                        </div>\n                        <div className='pb2'>\n                            <Header.Subheader className='voucherFont'> Cost: {cost} Points </Header.Subheader>\n                        </div>\n                        <div className='pb2'>\n                            <Header.Subheader className='voucherFont'> <b className='black'>Currently Owned:</b> {owned} </Header.Subheader>\n                        </div>\n                        {this.state.buySuccess &&\n                            <div className='pb2'>\n                                <Header.Subheader className='voucherFont'>Voucher Successfully Bought!</Header.Subheader>\n                            </div>\n                        }\n\n                        {this.state.error &&\n                            <div className='pb2'>\n                                <Header.Subheader className='voucherFont'>Something went wrong!</Header.Subheader>\n                            </div>\n                        }\n                    </Header>\n\n                    <Button\n                        loading={this.state.buyingLoad}\n                        disabled={!canBuy}\n                        onClick={this.buyVoucher}\n                    >\n                        Buy Voucher\n                    </Button>\n                </Segment>\n            </div>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport url from '../../Config/url';\nimport VoucherCard from '../../Components/Cards/VoucherCard';\nimport './VoucherList.css';\n\nclass Voucherlist extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            vouchers: [],\n            customerPoints: 0,\n            loading: true,\n            pointLoadFailed: false\n        }\n    }\n\n    componentDidMount() {\n        //refresh userdata (for point refresh)\n        this.refreshPage();\n    }\n\n    refreshPage() {\n        this.getUserPoints();\n        this.fetchVouchers();\n    }\n\n    getUserPoints() {\n        fetch(`${url.fetchURL}/userPoints`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID,\n            })\n        })\n            .then(resp => resp.json())\n            .then(points => {\n                points === 'fail' || points === 'Unable to Retrieve'\n                    ? this.setState({ pointLoadFailed: true })\n                    : this.setState({ customerPoints: points })\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    fetchVouchers() {\n        fetch(`${url.fetchURL}/voucherList`, {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: this.props.userID,\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({ vouchers: data, loading: false })\n            }).catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"w-75 pt5 center bb b--black-10 relative\">\n                <h1 className=\"tc baskerville f1 fw5\"> Vouchers Page</h1>\n\n                <h3 className=\"tc baskerville fw5 white\">\n                    {\n                        this.state.pointLoadFailed\n                            ? <div>Error: Unable to load points</div>\n                            : <div>You have {this.state.customerPoints} points to spend</div>\n                    }\n\n                </h3>\n                <div id='voucherGrid'>\n                    {this.state.vouchers.map((data) => {\n                        return <VoucherCard\n                            key={data.voucherName}\n                            data={data}\n                            userID={this.props.userID}\n                            refresh={this.refreshPage.bind(this)}\n                        />\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Voucherlist;","import React, { Component } from 'react';\nimport { Button, Modal } from 'semantic-ui-react'\nimport url from '../../Config/url'\n\n/**\n * Modal that is used for Cancellation of Reservation\n */\nclass DeleteModal extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            clicked: false,\n        }\n    }\n\n    clickDelete = () => {\n        const {data, userID} = this.props;\n        const { resName, location, dateTime, table, resUrl } = data;\n        fetch(`${url.fetchURL}/cancelResv`, {\n            method: 'delete',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                userID: userID,\n                location: location,\n                resName: resName,\n                dateTime: dateTime,\n                table: table,\n                resUrl: resUrl\n            })\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data === 'Success') {\n                    this.setState({ clicked: true });\n                }\n            })\n    }\n\n    onClose = () => {\n        this.setState({clicked: false});\n    }\n\n    render() {\n\n        return (\n            <Modal\n                trigger={<Button> Cancel Reservation </Button>}\n                onClose={() => this.onClose()}\n                size = {'small'}\n            >\n                <Modal.Header className='tc'> Cancel Reservation </Modal.Header>\n                <Modal.Content>\n                    {this.state.clicked\n                        ? <h3 className='black'>Your reservation has been cancelled. Click out of this modal to exit</h3>\n                        : <div>\n                            <div className='mb3'> Are you sure you want to cancel your reservation? This action is irreversible.</div>\n                            <Button negative onClick={() => this.clickDelete()} content='Cancel Reservation' />\n                        </div>\n                    }\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default DeleteModal;","import React, { Component } from 'react';\n\nimport './EditCResvPage.css'\nimport BookRestaurant from '../SearchForm/BookRestaurant';\nimport DeleteModal from '../../Components/Modals/DeleteModal';\nimport dateParser from '../../Common/ParserUtil';\n\n/**\n * Page that shows the list of Reservations that a customer has made\n */\nclass EditCResvPage extends Component {\n    render() {\n        const { resvData, userID } = this.props.location.state;\n        const { dateTime, location, pax , resName, resUrl, resid, table } = resvData;\n\n        return (\n            <div className='flex flex-column items-center relative'>\n                <h1 className='editHeader pt5'> Edit Reservation </h1>\n\n                <div className=\"pv3\">\n                    <h3 className> Restaurant Name: {resName} </h3>\n                    <h3 className> Restaurant Location: {location} </h3>\n                    <h3 className> Your Stated Pax: {pax} </h3>\n                    <h3 className> Your Stated Table: {table} </h3>\n                    <h3 className> Your Stated DateTime: {dateParser(dateTime)} </h3>\n\n                </div>\n                \n                \n                <BookRestaurant \n                    isEditing = {true}\n                    userID = {userID}\n                    resUrl = {resUrl}\n                    franchisorId = {resid}\n                    location = {location}\n                    oldDateTime = {dateTime}\n                    oldTableNumber = {table}\n                />\n\n                <h2 className='white pt4 editText'> I wish to cancel my Reservation</h2>\n                <div className=''>\n                    <DeleteModal\n                        data={resvData}\n                        userID={userID}\n                        className='deleteModal' />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EditCResvPage;","const particlesOptions = {\n\t\"particles\": {\n\t\t\"number\": {\n\t\t\t\"value\": 100,\n\t\t\t\"density\": { \"enable\": true, \"value_area\": 700 }\n\t\t},\n\t\t\"color\": { \"value\": \"#c0c0c0\" },\n\t\t\"shape\": {\n\t\t\t\"type\": \"circle\",\n\t\t\t\"stroke\": { \"width\": 0, \"color\": \"#000000\" },\n\t\t\tpolygon: { nb_sides: 5 },\n\t\t},\n\t\topacity: {\n\t\t\t\"value\": 0.5,\n\t\t\t\"random\": false,\n\t\t\t\"anim\": {\n\t\t\t\t\"enable\": false,\n\t\t\t\t\"speed\": 1,\n\t\t\t\t\"opacity_min\": 0.1,\n\t\t\t\t\"sync\": false\n\t\t\t}\n\t\t},\n\t\t\"size\": {\n\t\t\t\"value\": 5,\n\t\t\t\"random\": true,\n\t\t\t\"anim\": {\n\t\t\t\t\"enable\": true,\n\t\t\t\t\"speed\": 40,\n\t\t\t\t\"size_min\": 1,\n\t\t\t\t\"sync\": false\n\t\t\t}\n\t\t},\n\t\t\"line_linked\": { \"enable\": true, \"distance\": 150, \"color\": \"#ffffff\", \"opacity\": 0.4, \"width\": 1 },\n\t\t\"move\": {\n\t\t\t\"enable\": true,\n\t\t\t\"speed\": 4,\n\t\t\t\"direction\": \"none\",\n\t\t\t\"random\": false,\n\t\t\t\"straight\": false,\n\t\t\t\"out_mode\": \"out\",\n\t\t\t\"bounce\": false,\n\t\t\t\"attract\": {\n\t\t\t\t\"enable\": false,\n\t\t\t\t\"rotateX\": 600,\n\t\t\t\t\"rotateY\": 1200\n\t\t\t}\n\t\t}\n\t},\n\t\"interactivity\": {\n\t\t\"detect_on\": \"canvas\",\n\t\t\"events\": {\n\t\t\t\"onhover\": {\n\t\t\t\t\"enable\": true, \"mode\": \"repulse\"\n\t\t\t},\n\t\t\t\"onclick\": { \"enable\": true, \"mode\": \"push\" },\n\t\t\t\"resize\": true\n\t\t},\n\t\t\"modes\": {\n\t\t\t\"grab\": {\n\t\t\t\t\"distance\": 400,\n\t\t\t\t\"line_linked\": { \"opacity\": 1 }\n\t\t\t},\n\t\t\t\"bubble\": { \"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3 },\n\t\t\t\"repulse\": { \"distance\": 200, \"duration\": 0.4 },\n\t\t\t\"push\": { \"particles_nb\": 4 },\n\t\t\t\"remove\": { \"particles_nb\": 2 }\n\t\t}\n\t},\n\t\"retina_detect\": true\n}\n\nexport default particlesOptions;","const initialState = {\n  isSignedIn: false,\n  userID: '',\n  name: '',\n  isFranchiseOwner: false\n}\n\nconst loginCustomerState = {\n  isSignedIn: true,\n  userID: 'AhisomeRoy55',\n  name: 'Ahisome Roy',\n  isFranchiseOwner: false,\n  points: 1234\n}\n\nconst loginFranchiseState = {\n  isSignedIn: true,\n  userID: 'AdahJunk-foodaccount',\n  name: 'Adah Junk-food',\n  isFranchiseOwner: true\n}\n\nconst loginState = {\n  logout: initialState,\n  customer: loginCustomerState,\n  franchiseOwner: loginFranchiseState\n}\n\nexport default loginState\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedCustomerRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            path = {rest.path}\n            exact\n            render={props => {\n                if (rest.isCustomer) {\n                    return <Component {...props} {...rest}/>;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n\nexport default ProtectedCustomerRoute;","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\n\n//Import Containers\nimport Homepage from \"./Containers/Homepage\";\nimport NonExistentPage from \"./Containers/NonExistentPage\";\nimport NavBar from \"./Containers/NavBar/NavBar\";\nimport RestaurantsListPage from \"./Containers/Restaurants/RestaurantsListPage\";\nimport Reservations from \"./Containers/Reservations/Reservations\";\nimport LoginPage from \"./Containers/LoginPage/LoginPage\";\nimport Register from \"./Containers/RegisterPage/RegisterPage\";\nimport LandingPage from \"./Containers/RestaurantLandingPage/LandingPage\";\nimport ProtectedRoute from \"./Common/ProtectedRoute\";\nimport Voucherlist from \"./Containers/VoucherList/VoucherList\";\nimport EditCResvPage from \"./Containers/Reservations/EditCResvPage\";\nimport ParticlesOptions from \"./Data/ParticlesOptions\";\nimport LoginState from \"./Data/LoginState\";\nimport ProtectedCustomerRoute from \"./Common/ProtectedCustomerRoute\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = LoginState.logout;\n  }\n\n  //for Customers\n  loginUser = (userID, name) => {\n    this.loginUser(userID, name, false);\n  };\n\n  loginUser = (userID, name, isFranchiseOwner) => {\n    this.setState({\n      isSignedIn: true,\n      userID: userID,\n      name: name,\n      isFranchiseOwner: isFranchiseOwner,\n    });\n  };\n\n  signOutUser = () => {\n    this.setState(LoginState.logout);\n  };\n\n  render() {\n    const isSignedIn = this.state.isSignedIn;\n    const isCustomer = isSignedIn && !this.state.isFranchiseOwner;\n\n    let loginProp = isSignedIn ? this.signOutUser : this.loginUser;\n    return (\n      <BrowserRouter>\n        <Particles className=\"particles\" params={ParticlesOptions} />\n        <NavBar\n          loginProp={loginProp}\n          isSignedIn={isSignedIn}\n          name={this.state.name}\n          isFranchiseOwner={this.state.isFranchiseOwner}\n        />\n        <div className=\"body\">\n          <Switch>\n            <Route path=\"/\" exact component={Homepage} />\n            <Route\n              path=\"/restaurants\"\n              exact\n              render={(props) => (\n                <RestaurantsListPage\n                  {...props}\n                  isSignedIn={isSignedIn}\n                  userID={this.state.userID}\n                  isFranchiseOwner={this.state.isFranchiseOwner}\n                />\n              )}\n            />\n            <ProtectedRoute\n              path=\"/reservations\"\n              component={Reservations}\n              userID={this.state.userID}\n              isSignedIn={isSignedIn}\n              isFranchiseOwner={this.state.isFranchiseOwner}\n            />\n            <ProtectedCustomerRoute\n              path=\"/voucherlist\"\n              component={Voucherlist}\n              userID={this.state.userID}\n              isCustomer={isCustomer}\n            />\n            <ProtectedCustomerRoute\n              path=\"/editresv\"\n              component={EditCResvPage}\n              userID={this.state.userID}\n              isCustomer={isCustomer}\n            />\n            <Route\n              path=\"/login\"\n              exact\n              render={(props) => (\n                <LoginPage\n                  {...props}\n                  isSignedIn={isSignedIn}\n                  loginUser={this.loginUser}\n                />\n              )}\n            />\n            <Route path=\"/register\" exact component={Register} />\n            <Route\n              path=\"/restaurants/:name\"\n              render={(props) => (\n                <LandingPage\n                  {...props}\n                  isSignedIn={isSignedIn}\n                  userID={this.state.userID}\n                  isFranchiseOwner={this.state.isFranchiseOwner}\n                />\n              )}\n            />\n            <Route path=\"*\" component={NonExistentPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/food.e679b3f3.jpg\";"],"sourceRoot":""}